{"version":3,"sources":["views/app-views/apps/chat/Conversation.js","views/app-views/apps/chat/ChatContent.js","views/app-views/apps/chat/ChatMenu.js","views/app-views/apps/chat/index.js","constants/ChartConstant.js","components/shared-components/AvatarStatus/index.js","components/shared-components/EllipsisDropdown/index.js","layouts/inner-app-layout/index.js"],"names":["menu","Item","UserOutlined","AudioMutedOutlined","Divider","DeleteOutlined","Conversation","formRef","React","createRef","chatBodyRef","state","info","msgList","getConversation","currentId","data","ChatData","filter","elm","id","setState","msg","getMsgType","obj","msgType","text","src","alt","Flex","alignItems","className","FileOutlined","scrollToBottom","current","onSend","values","newMsg","newMsgData","avatar","from","time","setFieldsValue","emptyClick","e","preventDefault","chatContentHeader","name","EllipsisDropdown","chatContentBody","props","ref","autoHide","map","i","chatContentFooter","onFinish","autoComplete","placeholder","suffix","href","onClick","SmileOutlined","PaperClipOutlined","shape","type","size","htmlType","SendOutlined","this","getUserId","prevProps","location","pathname","match","params","parseInt","Component","ConversationEmpty","ChatContent","path","url","component","ChatMenu","useState","list","setList","history","useHistory","onChange","query","target","value","item","toLowerCase","includes","prefix","SearchOutlined","unread","push","openChat","length","AvatarStatus","subTitle","count","style","backgroundColor","COLOR_1","Chat","sideContent","mainContent","sideContentWidth","sideContentGutter","border","COLOR_2","COLOR_4","COLOR_1_LIGHT","COLOR_2_LIGHT","COLORS","COLORS_LIGHT","COLOR_AXES","COLOR_TEXT","apexLineChartDefaultOption","chart","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","lineCap","legend","position","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","series","seriesIndex","dataPointIndex","xaxis","categories","grid","lines","yaxis","apexAreaChartDefaultOption","apexBarChartDefaultOption","plotOptions","bar","horizontal","columnWidth","startingShapre","endingShape","inverseOrder","fill","opacity","tooltip","y","formatter","apexPieChartDefaultOption","pie","donut","labels","total","showAlways","label","fontSize","fontFamily","fontWeight","color","seriesTotals","reduce","a","b","renderAvatar","icon","gap","onNameClick","overlay","placement","trigger","defaultProps","useBreakpoint","Grid","SideContent","SideContentMobile","visible","onSideContentClose","closable","onClose","bodyStyle","paddingLeft","paddingRight","InnerAppLayout","pageHeader","isMobile","utils","getBreakPoint","setVisible"],"mappings":"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","file":"static/js/79.7ae3d479.chunk.js","sourcesContent":["import React from 'react'\r\nimport ChatData from \"assets/data/chat.data.json\"\r\nimport { Avatar, Divider, Input, Form, Button, Menu } from 'antd';\r\nimport { \r\n\tFileOutlined, \r\n\tSendOutlined, \r\n\tPaperClipOutlined, \r\n\tSmileOutlined, \r\n\tAudioMutedOutlined,\r\n\tUserOutlined,\r\n\tDeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\r\n\r\nconst\tmenu = () => (\r\n\t<Menu>\r\n\t\t<Menu.Item key=\"0\">\r\n\t\t\t<UserOutlined />\r\n\t\t\t<span>User Info</span>\r\n\t\t</Menu.Item>\r\n\t\t<Menu.Item key=\"1\">\r\n\t\t\t<AudioMutedOutlined />\r\n\t\t\t<span>Mute Chat</span>\r\n\t\t</Menu.Item>\r\n\t\t<Menu.Divider />\r\n\t\t<Menu.Item key=\"3\">\r\n\t\t\t<DeleteOutlined />\r\n\t\t\t<span>Delete Chat</span>\r\n\t\t</Menu.Item>\r\n\t</Menu>\r\n);\r\n\r\nexport class Conversation extends React.Component {\r\n\tformRef = React.createRef();\r\n\tchatBodyRef = React.createRef()\r\n\r\n\tstate = {\r\n\t\tinfo: {},\r\n\t\tmsgList: [],\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tthis.getConversation(this.getUserId())\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (this.props.location.pathname !== prevProps.location.pathname) {\r\n\t\t\tthis.getConversation(this.getUserId())\t\t\t\r\n\t\t}\r\n\t\tthis.scrollToBottom()\r\n\t}\r\n\t\r\n\tgetUserId() {\r\n\t\tconst { id } = this.props.match.params\r\n\t\treturn parseInt(parseInt(id))\r\n\t}\r\n\t\r\n\r\n\tgetConversation = currentId => {\r\n\t\tconst data = ChatData.filter(elm => elm.id === currentId)\r\n\t\tthis.setState({\r\n\t\t\tinfo: data[0],\r\n\t\t\tmsgList: data[0].msg\r\n\t\t})\t\r\n\t}\r\n\r\n\tgetMsgType = obj => {\r\n\t\tswitch (obj.msgType) {\r\n\t\t\tcase 'text':\r\n\t\t\t\treturn <span>{obj.text}</span>\r\n\t\t\tcase 'image':\r\n\t\t\t\treturn <img src={obj.text} alt={obj.text} />\r\n\t\t\tcase 'file':\r\n\t\t\t\treturn (\r\n\t\t\t\t<Flex alignItems=\"center\" className=\"msg-file\">\r\n\t\t\t\t\t<FileOutlined className=\"font-size-md\"/>\r\n\t\t\t\t\t<span className=\"ml-2 font-weight-semibold text-link pointer\">\r\n\t\t\t\t\t\t<u>{obj.text}</u>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t)\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tscrollToBottom = () => {\r\n\t\tthis.chatBodyRef.current.scrollToBottom()\r\n\t}\r\n\r\n\tonSend = values => {\r\n\t\tif (values.newMsg) {\r\n\t\t\tconst newMsgData = {\r\n\t\t\t\tavatar: \"\",\r\n\t\t\t\tfrom: \"me\",\r\n\t\t\t\tmsgType: \"text\",\r\n\t\t\t\ttext: values.newMsg,\r\n\t\t\t\ttime: \"\",\r\n\t\t\t}\r\n\t\t\tthis.formRef.current.setFieldsValue({\r\n\t\t\t\tnewMsg: ''\r\n\t\t\t});\r\n\t\t\tthis.setState({\r\n\t\t\t\tmsgList: [...this.state.msgList, newMsgData]\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\t\r\n\temptyClick = (e) => {\r\n    e.preventDefault();\r\n\t};\r\n\t\r\n\tchatContentHeader = name => (\r\n\t\t<div className=\"chat-content-header\">\r\n\t\t\t<h4 className=\"mb-0\">{name}</h4>\r\n\t\t\t<div>\r\n\t\t\t\t<EllipsisDropdown menu={menu}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n\tchatContentBody = (props, id) => (\r\n\t\t<div className=\"chat-content-body\">\r\n\t\t\t<Scrollbars ref={this.chatBodyRef} autoHide>\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.map((elm, i) => (\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tkey={`msg-${id}-${i}`} \r\n\t\t\t\t\t\t\tclassName={`msg ${elm.msgType === 'date'? 'datetime' : ''} ${elm.from === 'opposite'? 'msg-recipient' : elm.from === 'me'? 'msg-sent' : ''}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\telm.avatar? \r\n\t\t\t\t\t\t\t\t<div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t\t<Avatar src={elm.avatar} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\telm.text?\r\n\t\t\t\t\t\t\t\t<div className={`bubble ${!elm.avatar? 'ml-5' : ''}`}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"bubble-wrapper\">\r\n\t\t\t\t\t\t\t\t\t\t{this.getMsgType(elm)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\telm.msgType === 'date'?\r\n\t\t\t\t\t\t\t\t<Divider>{elm.time}</Divider>\r\n\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</Scrollbars>\r\n\t\t</div>\r\n\t)\r\n\r\n\tchatContentFooter = () => (\r\n\t\t<div className=\"chat-content-footer\">\r\n\t\t\t<Form name=\"msgInput\" ref={this.formRef} onFinish={this.onSend} className=\"w-100\">\r\n\t\t\t\t<Form.Item name=\"newMsg\" className=\"mb-0\">\r\n\t\t\t\t\t<Input \r\n\t\t\t\t\t\tautoComplete=\"off\" \r\n\t\t\t\t\t\tplaceholder=\"Type a message...\"\r\n\t\t\t\t\t\tsuffix={\r\n\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t<a href=\"/#\"  className=\"text-dark font-size-lg mr-3\" onClick={this.emptyClick}>\r\n\t\t\t\t\t\t\t\t\t<SmileOutlined />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<a href=\"/#\" className=\"text-dark font-size-lg mr-3\" onClick={this.emptyClick}>\r\n\t\t\t\t\t\t\t\t\t<PaperClipOutlined />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<Button shape=\"circle\" type=\"primary\" size=\"small\" onClick={this.onSend} htmlType=\"submit\">\r\n\t\t\t\t\t\t\t\t\t<SendOutlined />\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t)\r\n\r\n\r\n\trender() {\r\n\t\tconst { id } = this.props.match.params\r\n\t\tconst { info, msgList } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"chat-content\">\r\n\t\t\t\t{this.chatContentHeader(info.name)}\r\n\t\t\t\t{this.chatContentBody(msgList, id)}\r\n\t\t\t\t{this.chatContentFooter()}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default Conversation\r\n","import React from 'react'\r\nimport { Route, Switch, } from 'react-router-dom';\r\nimport Conversation from './Conversation';\r\n\r\nconst ConversationEmpty = () => (\r\n  <div className=\"chat-content-empty\">\r\n    <div className=\"text-center\">\r\n      <img src=\"/img/others/img-11.png\" alt=\"Start a Conversation\" />\r\n      <h1 className=\"font-weight-light\">Start a conversation</h1>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst ChatContent = ({match}) => {\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.url}/:id`} component={Conversation} />\r\n      <Route path={`${match.url}`} component={ConversationEmpty} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default ChatContent\r\n","import React, { useState } from 'react'\r\nimport ChatData from \"assets/data/chat.data.json\"\r\nimport { Badge, Input } from 'antd';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport { COLOR_1 } from 'constants/ChartConstant';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatMenu = ({ match, location }) => {\r\n\tconst [list, setList] = useState(ChatData);\r\n\tlet history = useHistory();\r\n\tconst openChat = id => {\r\n\t\tconst data = list.map( elm => {\r\n\t\t\tif(elm.id === id) {\r\n\t\t\t\telm.unread = 0\r\n\t\t\t}\r\n\t\t\treturn elm\r\n\t\t})\r\n\t\tsetList(data)\r\n\t\thistory.push(`${match.url}/${id}`)\r\n\t}\r\n\r\n\tconst searchOnChange = e => {\r\n\t\tconst query = e.target.value;\r\n\t\tconst data = ChatData.filter(item => {\r\n\t\t\treturn query === ''? item : item.name.toLowerCase().includes(query)\r\n\t\t})\r\n\t\tsetList(data)\r\n\t}\r\n\r\n\tconst id = parseInt(location.pathname.match(/\\/([^/]+)\\/?$/)[1])\r\n\r\n\treturn (\r\n\t\t<div className=\"chat-menu\">\r\n\t\t\t<div className=\"chat-menu-toolbar\">\r\n\t\t\t\t<Input \r\n\t\t\t\t\tplaceholder=\"Search\" \r\n\t\t\t\t\tonChange={searchOnChange}\r\n\t\t\t\t\tprefix={\r\n\t\t\t\t\t\t<SearchOutlined className=\"font-size-lg mr-2\"/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"chat-menu-list\">\r\n\t\t\t\t{\r\n\t\t\t\t\tlist.map( (item, i) => (\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tkey={`chat-item-${item.id}`} \r\n\t\t\t\t\t\t\tonClick={() => openChat(item.id)} \r\n\t\t\t\t\t\t\tclassName={`chat-menu-list-item ${i === (list.length - 1)? 'last' : ''} ${item.id === id? 'selected' : ''}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AvatarStatus src={item.avatar} name={item.name} subTitle={item.msg[item.msg.length - 1].text}/>\r\n\t\t\t\t\t\t\t<div className=\"text-right\">\r\n\t\t\t\t\t\t\t\t<div className=\"chat-menu-list-item-time\">{item.time}</div>\r\n\t\t\t\t\t\t\t\t{item.unread === 0 ? <span></span> : <Badge count={item.unread} style={{backgroundColor: COLOR_1}}/>}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ChatMenu\r\n","import React from 'react'\r\nimport InnerAppLayout from 'layouts/inner-app-layout';\r\nimport ChatContent from './ChatContent';\r\nimport ChatMenu from './ChatMenu';\r\n\r\nconst Chat = props => {\r\n\treturn (\r\n\t\t<div className=\"chat\">\r\n\t\t\t<InnerAppLayout \r\n\t\t\t\tsideContent={<ChatMenu {...props}/>}\r\n\t\t\t\tmainContent={<ChatContent {...props}/>}\r\n\t\t\t\tsideContentWidth={450}\r\n\t\t\t\tsideContentGutter={false}\r\n\t\t\t\tborder\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Chat\r\n","export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n\tCOLOR_1,\r\n\tCOLOR_2,\r\n\tCOLOR_3,\r\n\tCOLOR_4,\r\n\tCOLOR_5,\r\n\tCOLOR_6,\r\n\tCOLOR_7\r\n]\r\n\r\nexport const COLORS_LIGHT = [\r\n\tCOLOR_1_LIGHT,\r\n\tCOLOR_2_LIGHT,\r\n\tCOLOR_3_LIGHT,\r\n\tCOLOR_4_LIGHT,\r\n\tCOLOR_5_LIGHT,\r\n\tCOLOR_6_LIGHT,\r\n\tCOLOR_7_LIGHT\r\n]\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 3,\r\n\t\tcurve: 'smooth',\r\n\t\tlineCap: 'round'\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tgrid: {\r\n\t\txaxis: {\r\n\t\t\tlines: {\r\n\t\t\t\tshow: true,\r\n\t\t\t}\r\n\t\t},\r\n\t\t  yaxis: {\r\n\t\t\tlines: {\r\n\t\t\t  show: false,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport const apexAreaChartDefaultOption = {...apexLineChartDefaultOption}\r\n\r\nexport const apexBarChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tplotOptions: {\r\n\t\tbar: {\r\n\t\t\thorizontal: false,\r\n\t\t\tcolumnWidth: '25px',\r\n\t\t\tstartingShapre: 'rounded',\r\n\t\t\tendingShape: 'rounded'\r\n\t\t},\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\tshow: true,\r\n\t\twidth: 12,\r\n\t\tcurve: 'smooth',\r\n\t\tcolors: ['transparent']\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\tinverseOrder: true,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tfill: {\r\n\t\topacity: 1\r\n\t},\r\n\ttooltip: {\r\n\t\ty: {\r\n\t\t\tformatter: val => (`${val}`)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const apexPieChartDefaultOption = {\r\n\tcolors: [...COLORS],\r\n\tplotOptions: {\r\n\t\tpie: {\r\n\t\t\tsize: 50,\r\n\t\t  donut: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\ttotal: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tshowAlways: true,\r\n\t\t\t\t\t\tlabel: '',\r\n\t\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t\t\tfontFamily: 'Roboto',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\tcolor: '#1a3353',\r\n\t\t\t\t\t\tformatter: function (w) {\r\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a + b\r\n\t\t\t\t\t\t\t}, 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsize: '87%'\r\n\t\t  }\r\n\t\t}\r\n\t},\r\n\tlabels: [],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tlegend: {\r\n\t\tshow: false\r\n\t}\r\n}\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n\tchart: {\r\n\t\ttype: 'line',\r\n\t\tsparkline: {\r\n\t\t\tenabled: true\r\n\t\t}\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 2,\r\n\t\tcurve: 'smooth'\r\n\t},\r\n\ttooltip: {\r\n\t\tfixed: {\r\n\t\t  \tenabled: false\r\n\t\t},\r\n\t\tx: {\r\n\t\t  \tshow: false\r\n\t\t},\r\n\t\ty: {\r\n\t\t\ttitle: {\r\n\t\t\t\tformatter: function (seriesName) {\r\n\t\t\t\t\treturn ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmarker: {\r\n\t\t  show: false\r\n\t\t}\r\n\t}\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React from 'react'\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst EllipsisDropdown = props => {\r\n\treturn (\r\n\t\t<Dropdown overlay={props.menu} placement={props.placement} trigger={['click']}>\r\n\t\t\t<div className=\"ellipsis-dropdown\">\r\n\t\t\t\t<EllipsisOutlined />\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nEllipsisDropdown.propTypes = {\r\n\ttrigger: PropTypes.string,\r\n\tplacement: PropTypes.string\r\n}\r\n\r\nEllipsisDropdown.defaultProps = {\r\n\ttrigger: 'click',\r\n\tplacement: 'bottomRight',\r\n\tmenu: <Menu/>\r\n};\r\n\r\nexport default EllipsisDropdown\r\n","import React, { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Drawer } from \"antd\";\r\nimport utils from 'utils'\r\nimport { MenuOutlined } from '@ant-design/icons';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst SideContent = props => {\r\n\tconst { sideContent, sideContentWidth = 250, border } = props\r\n\treturn (\r\n\t\t<div className={`side-content ${border? 'with-border': ''}`} style={{width: `${sideContentWidth}px`}}>\r\n\t\t\t{sideContent}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst SideContentMobile = props => {\r\n\tconst { sideContent, visible, onSideContentClose } = props\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\twidth={320}\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={false}\r\n\t\t\tonClose={onSideContentClose}\r\n\t\t\tvisible={visible}\r\n\t\t\tbodyStyle={{paddingLeft: 0, paddingRight: 0}}\r\n\t\t>\r\n\t\t\t<div className=\"h-100\">\r\n\t\t\t\t{sideContent}\r\n\t\t\t</div>\r\n\t\t</Drawer>\r\n\t)\r\n}\r\n\r\nexport const InnerAppLayout = props => {\r\n\tconst { mainContent, pageHeader, sideContentGutter = true } = props\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst [visible, setVisible] = useState(false);\r\n\r\n\tconst close = (e) => {\r\n\t\tsetVisible(false)\r\n\t} \r\n\r\n\tconst openSideContentMobile = () => {\r\n\t\tsetVisible(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"inner-app-layout\">\r\n\t\t\t{isMobile ? \r\n\t\t\t\t<SideContentMobile \r\n\t\t\t\t\tvisible={visible} \r\n\t\t\t\t\tonSideContentClose={close}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/> \r\n\t\t\t\t: \r\n\t\t\t\t<SideContent {...props} />\r\n\t\t\t}\r\n\t\t\t<div className={`main-content ${pageHeader? 'has-page-header' : ''} ${sideContentGutter? 'gutter' : 'no-gutter'}`}>\r\n\t\t\t\t{isMobile ? \r\n\t\t\t\t\t<div className={`font-size-lg mb-3 ${!sideContentGutter ? 'pt-3 px-3' : ''}`}>\r\n\t\t\t\t\t\t<MenuOutlined onClick={() => openSideContentMobile()}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t{mainContent}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nInnerAppLayout.propTypes = {\r\n\tsideContent: PropTypes.node,\r\n\tmainContent: PropTypes.node,\r\n\tpageHeader: PropTypes.bool,\r\n\tsideContentWidth: PropTypes.number,\r\n\tborder: PropTypes.bool,\r\n\tsideContentGutter: PropTypes.bool\r\n};\r\n\r\nexport default InnerAppLayout\r\n"],"sourceRoot":""}