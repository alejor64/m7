{"version":3,"sources":["../node_modules/d3-array/src/ticks.js","../node_modules/d3-interpolate/src/numberArray.js","../node_modules/d3-interpolate/src/array.js","../node_modules/d3-interpolate/src/date.js","../node_modules/d3-interpolate/src/object.js","../node_modules/d3-interpolate/src/value.js","../node_modules/d3-interpolate/src/round.js","../node_modules/d3-scale/src/number.js","../node_modules/d3-scale/src/continuous.js","../node_modules/d3-scale/src/constant.js","../node_modules/d3-format/src/formatSpecifier.js","../node_modules/d3-format/src/formatDecimal.js","../node_modules/d3-format/src/exponent.js","../node_modules/d3-format/src/formatPrefixAuto.js","../node_modules/d3-format/src/defaultLocale.js","../node_modules/d3-format/src/formatRounded.js","../node_modules/d3-format/src/formatTypes.js","../node_modules/d3-format/src/identity.js","../node_modules/d3-format/src/locale.js","../node_modules/d3-format/src/formatGroup.js","../node_modules/d3-format/src/formatNumerals.js","../node_modules/d3-format/src/formatTrim.js","../node_modules/d3-scale/src/tickFormat.js","../node_modules/d3-format/src/precisionPrefix.js","../node_modules/d3-format/src/precisionRound.js","../node_modules/d3-format/src/precisionFixed.js","../node_modules/d3-scale/src/linear.js","../node_modules/d3-scale/src/quantize.js","../node_modules/d3-dsv/src/dsv.js","../node_modules/d3-dsv/src/csv.js","../node_modules/d3-dsv/src/tsv.js","../node_modules/d3-fetch/src/text.js","../node_modules/d3-fetch/src/dsv.js","../node_modules/d3-array/src/quantile.js","../node_modules/d3-scale/src/quantile.js","../node_modules/@vx/pattern/esm/patterns/Pattern.js","../node_modules/@vx/pattern/esm/constants/index.js","../node_modules/@vx/pattern/esm/patterns/Lines.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/ascending.js","../node_modules/d3-scale/src/init.js","../node_modules/d3-array/src/number.js"],"names":["e10","Math","sqrt","e5","e2","tickIncrement","start","stop","count","step","max","power","floor","log","LN10","error","pow","a","b","i","n","min","length","c","slice","t","isNumberArray","x","ArrayBuffer","isView","DataView","genericArray","nb","na","Array","value","d","Date","setTime","k","constant","number","color","rgb","string","date","numberArray","isArray","valueOf","toString","isNaN","object","round","unit","identity","normalize","NaN","bimap","domain","range","interpolate","d0","d1","r0","r1","polymap","j","r","reverse","bisect","copy","source","target","clamp","unknown","transformer","transform","untransform","piecewise","output","input","interpolateValue","rescale","clamper","scale","map","invert","y","interpolateNumber","_","arguments","from","rangeRound","interpolateRound","u","continuous","re","formatSpecifier","specifier","match","exec","Error","FormatSpecifier","fill","align","sign","symbol","zero","width","comma","precision","trim","type","this","undefined","prototype","formatDecimalParts","p","toExponential","indexOf","coefficient","prefixExponent","locale","format","formatPrefix","abs","exponent","join","toFixed","toLocaleString","replace","toPrecision","formatRounded","toUpperCase","prefixes","grouping","thousands","group","call","Number","g","push","substring","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","String","percent","minus","nan","newFormat","formatTypes","prefix","test","toLowerCase","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","s","out","i1","i0","formatTrim","charCodeAt","Infinity","padding","f","e","formatLocale","tickFormat","step0","step1","tickStep","precisionPrefix","precisionRound","precisionFixed","linearish","ticks","isFinite","nice","prestep","maxIter","ceil","linear","initRange","apply","quantize","x0","x1","invertExtent","thresholds","EOL","EOF","objectConverter","columns","Function","name","JSON","stringify","inferColumns","rows","columnSet","Object","create","forEach","row","column","pad","formatDate","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","delimiter","reFormat","RegExp","DELIMITER","parseRows","text","N","I","eof","eol","token","preformatBody","formatValue","formatRow","parse","convert","customConverter","concat","formatBody","formatRows","csv","dsv","csvParse","tsv","tsvParse","responseText","response","ok","status","statusText","init","fetch","then","dsvParse","quantileSorted","values","valueof","value0","value1","quantile","threshold","sort","ascending","quantiles","Pattern","_ref","id","height","children","React","createElement","patternUnits","propTypes","_pt","isRequired","node","PatternOrientation","pathForOrientation","orientation","Lines","_ref2","stroke","strokeWidth","strokeDasharray","_ref2$strokeLinecap","strokeLinecap","_ref2$shapeRendering","shapeRendering","_ref2$orientation","background","className","orientations","cx","o","key","oneOfType","oneOf","array","delta","compare","left","lo","hi","mid","ascendingComparator","center","right","ascendingBisect","bisector","bisectRight","numbers","index"],"mappings":"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","file":"static/js/75.8506f54b.chunk.js","sourcesContent":["var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {linearish} from \"./linear.js\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n","import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n","import dsv from \"./dsv.js\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text.js\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","import max from \"./max.js\";\nimport min from \"./min.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {ascending, bisect, quantileSorted as threshold} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import _pt from \"prop-types\";\nimport React from 'react';\nexport default function Pattern(_ref) {\n  var id = _ref.id,\n      width = _ref.width,\n      height = _ref.height,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"pattern\", {\n    id: id,\n    width: width,\n    height: height,\n    patternUnits: \"userSpaceOnUse\"\n  }, children));\n}\nPattern.propTypes = {\n  id: _pt.string.isRequired,\n  width: _pt.number.isRequired,\n  height: _pt.number.isRequired,\n  children: _pt.node.isRequired\n};","export var PatternOrientation = {\n  horizontal: 'horizontal',\n  vertical: 'vertical',\n  diagonal: 'diagonal',\n  diagonalRightToLeft: 'diagonalRightToLeft'\n};","import _pt from \"prop-types\";\nimport React from 'react';\nimport cx from 'classnames';\nimport Pattern from './Pattern';\nimport { PatternOrientation } from '../constants';\nexport function pathForOrientation(_ref) {\n  var height = _ref.height,\n      orientation = _ref.orientation;\n\n  switch (orientation) {\n    case PatternOrientation.vertical:\n      return \"M \" + height / 2 + \", 0 l 0, \" + height;\n\n    case PatternOrientation.horizontal:\n      return \"M 0,\" + height / 2 + \" l \" + height + \",0\";\n\n    case PatternOrientation.diagonal:\n      return \"M 0,\" + height + \" l \" + height + \",\" + -height + \" M \" + -height / 4 + \",\" + height / 4 + \" l \" + height / 2 + \",\" + -height / 2 + \"\\n             M \" + 3 / 4 * height + \",\" + 5 / 4 * height + \" l \" + height / 2 + \",\" + -height / 2;\n\n    case PatternOrientation.diagonalRightToLeft:\n      return \"M 0,0 l \" + height + \",\" + height + \"\\n        M \" + -height / 4 + \",\" + 3 / 4 * height + \" l \" + height / 2 + \",\" + height / 2 + \"\\n        M \" + 3 / 4 * height + \",\" + -height / 4 + \" l \" + height / 2 + \",\" + height / 2;\n\n    default:\n      return \"M \" + height / 2 + \", 0 l 0, \" + height;\n  }\n}\nexport default function Lines(_ref2) {\n  var id = _ref2.id,\n      width = _ref2.width,\n      height = _ref2.height,\n      stroke = _ref2.stroke,\n      strokeWidth = _ref2.strokeWidth,\n      strokeDasharray = _ref2.strokeDasharray,\n      _ref2$strokeLinecap = _ref2.strokeLinecap,\n      strokeLinecap = _ref2$strokeLinecap === void 0 ? 'square' : _ref2$strokeLinecap,\n      _ref2$shapeRendering = _ref2.shapeRendering,\n      shapeRendering = _ref2$shapeRendering === void 0 ? 'auto' : _ref2$shapeRendering,\n      _ref2$orientation = _ref2.orientation,\n      orientation = _ref2$orientation === void 0 ? ['vertical'] : _ref2$orientation,\n      background = _ref2.background,\n      className = _ref2.className;\n  var orientations = Array.isArray(orientation) ? orientation : [orientation];\n  return /*#__PURE__*/React.createElement(Pattern, {\n    id: id,\n    width: width,\n    height: height\n  }, !!background && /*#__PURE__*/React.createElement(\"rect\", {\n    className: cx('vx-pattern-line-background'),\n    width: width,\n    height: height,\n    fill: background\n  }), orientations.map(function (o, i) {\n    return /*#__PURE__*/React.createElement(\"path\", {\n      key: \"vx-\" + id + \"-line-\" + o + \"-\" + i,\n      className: cx('vx-pattern-line', className),\n      d: pathForOrientation({\n        orientation: o,\n        height: height\n      }),\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray,\n      strokeLinecap: strokeLinecap,\n      shapeRendering: shapeRendering\n    });\n  }));\n}\nLines.propTypes = {\n  id: _pt.string.isRequired,\n  width: _pt.number.isRequired,\n  height: _pt.number.isRequired,\n  className: _pt.string,\n  background: _pt.string,\n  stroke: _pt.string,\n  strokeWidth: _pt.oneOfType([_pt.number, _pt.string]),\n  strokeDasharray: _pt.oneOfType([_pt.string, _pt.number]),\n  strokeLinecap: _pt.oneOf(['square', 'butt', 'round', 'inherit']),\n  shapeRendering: _pt.oneOfType([_pt.string, _pt.number]),\n  orientation: _pt.array\n};","import ascending from \"./ascending.js\";\n\nexport default function(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n"],"sourceRoot":""}